version: '3.9'

#This is a list of the netwokrs
networks:
  backend:
    ipam:
      driver: default
      config:
        - subnet: "10.16.0.0/24"
          gateway: 10.16.0.254

    #This is a list of the services (containers) that you will be using to run whatever application you have written.
services:

  webserver:

  #This is the build section of the Docker Compose file. This is where the docker-compose program will look if you use it's build
    build:

    #Context is the location of where your DockerFile resides on your local machine you are building the image from.
      context: ../../
      dockerfile: ./infra/YourTrace_Docker/docker/webserver.Dockerfile

    container_name: '${APP_NAME}-webserver'

    #Restart can be set so if your container fails for some reason and exits, that the container will try and reboot itself.
    restart: always

    environment:
      DATABASE_URL: 'mysql://${MYSQL_USER}:${MYSQL_PASS}@10.16.0.2:3306/${MYSQL_DB}'
      APP_ENV: "prod"
    #Ports are used when you want to publish ports and allow them to be accessed by computers or services outside
    ports:
      - '${APP_PORT_UNSECURE}:8000'
      - '${APP_PORT}:443'

    #Volumes are how you mount your local filesystem to the filesystem inside your container. Works the same way as SMB works
    volumes:
      #- ./sample.env:/var/www/html/.env
     # - /volumes_yourtrace/website:/var/www/html
      #- ./src/apache/sites-enabled:/etc/apache2/sites-enabled
      #- ./src/php/php.ini:/usr/local/etc/php/php.ini
      - ./volumes_yourtrace/logs/apache2:/var/log/apache2
    links:
      - database
    depends_on:
      database:
        condition: service_healthy
    networks:
      backend:
        ipv4_address: 10.16.0.1
    extra_hosts:
      - "controleur:10.16.0.5"
      - "toolbox:10.16.0.6"
      - "webserver:10.16.0.1"
      - "database:10.16.0.2"
      - "pma:10.16.0.3"
      - "redis:10.16.0.4"


#This is the start of the second container we have.
  database:
    build:
      context: ./docker
      dockerfile: database.Dockerfile
    container_name: '${APP_NAME}-database'
    restart: always
    #ports:
     # - '${DB_PORT}:3306'
    #This environment section allows you to set environment variables within the container
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASS}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASS}'
      MYSQL_DATABASE: '${MYSQL_DB}'
    volumes:
 #     - /volumes_yourtrace/db:/var/lib/mysql
    #  - ./src/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
      - /volumes_yourtrace/logs/mysql:/var/log/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 5
    networks:
      backend:
        ipv4_address: 10.16.0.2
    extra_hosts:
      - "controleur:10.16.0.5"
      - "toolbox:10.16.0.6"
      - "webserver:10.16.0.1"
      - "database:10.16.0.2"
      - "pma:10.16.0.3"
      - "redis:10.16.0.4"

  phpmyadmin:
    build:
      context: ./docker
      dockerfile: php.Dockerfile
    container_name: '${APP_NAME}-pma'
    restart: always
    ports:
      - '8080:${PHPADMIN_PORT}'
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASS}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASS}
    depends_on:
      database:
        condition: service_healthy
#    volumes:
      #- ./src/php/php.ini:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
    links:
      - database
    networks:
      backend:
        ipv4_address: 10.16.0.3
    extra_hosts:
      - "controleur:10.16.0.5"
      - "toolbox:10.16.0.6"
      - "webserver:10.16.0.1"
      - "database:10.16.0.2"
      - "pma:10.16.0.3"
      - "redis:10.16.0.4"

  redis:
    container_name: '${APP_NAME}-redis'
    image: redis:latest
    networks:
      backend:
        ipv4_address: 10.16.0.4
    ports:
      - '6379:${HOST_MACHINE_REDIS_PORT}'
    extra_hosts:
      - "controleur:10.16.0.5"
      - "toolbox:10.16.0.6"
      - "webserver:10.16.0.1"
      - "database:10.16.0.2"
      - "pma:10.16.0.3"
      - "redis:10.16.0.4"

  controleur:
    container_name: '${APP_NAME}-controleur'
    build:
      context: .
      dockerfile: ./docker/controleur.Dockerfile
    networks:
      backend:
        ipv4_address: 10.16.0.5
    extra_hosts:
      - "controleur:10.16.0.5"
      - "toolbox:10.16.0.6"
      - "webserver:10.16.0.1"
      - "database:10.16.0.2"
      - "pma:10.16.0.3"
      - "redis:10.16.0.4"


  toolbox:
    container_name: '${APP_NAME}-toolbox'
    build:
      context: .
      dockerfile: ./docker/toolbox.Dockerfile
    restart: always
    networks:
      backend:
        ipv4_address: 10.16.0.6
    extra_hosts:
      - "controleur:10.16.0.5"
      - "toolbox:10.16.0.6"
      - "webserver:10.16.0.1"
      - "database:10.16.0.2"
      - "pma:10.16.0.3"
      - "redis:10.16.0.4"
